package [(${source.controllerPath})];

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.black.core.aop.StartPage;
import [(${source.servicePath})].[(${source.className})]Service;
import lombok.extern.log4j.Log4j2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Log4j2
@CrossOrigin
@RestController
@RequestMapping
@SuppressWarnings("all")
public class [(${source.className})]Controller {

    @Autowired
    [(${source.className})]Service service;

    /***
     * 查询  [(${source.className})] 数据
     * @param body json 格式,请求体, 如果需要分页, 则指定 pageNum, pageSize
     * @return 返回 json 格式响应体
     */
    @StartPage
    @PostMapping("query[(${source.className})]")
    public Object query[(${source.className})](@RequestBody JSONObject body){
        return service.query[(${source.className})](body);
    }


    /***
     * 添加 [(${source.className})] 数据
     * @param body  json 格式,请求体
     * @return  json 格式响应体
     */
    @PostMapping("insert[(${source.className})]")
    public Object insert[(${source.className})](@RequestBody JSONObject body){
        return service.insert[(${source.className})](body);
    }

    /***
     * 添加多条 [(${source.className})] 数据
     * @param body  json 格式,请求体
     * @return  json 格式响应体
     */
    @PostMapping("insert[(${source.className})]List")
    public Object insert[(${source.className})]List(@RequestBody List<JSONObject> body){
         return service.insert[(${source.className})]s(body);
    }

    /***
     * 添加 [(${source.className})] 数据
     * @param body  json 格式,请求体
     * @return  json 格式响应体
     */
    @PostMapping("update[(${source.className})]")
    public Object update[(${source.className})](@RequestBody JSONObject body){
        return service.update[(${source.className})](body);
    }

    /***
     * 删除 [(${source.className})] 数据
     * @param body  json 格式,请求体
     * @return  json 格式响应体
     */
    @PostMapping("delete[(${source.className})]")
    public Object delete[(${source.className})](@RequestBody JSONObject body){
        return service.delete[(${source.className})](body);
    }

    /***
     * 删除多条 [(${source.className})] 数据
     * @param body  json 格式,请求体，格式为 id数组
     *              示例 : [xx,xx,...]
     * @return  json 格式响应体
     */
    @PostMapping("delete[(${source.className})]List")
    public Object delete[(${source.className})]List(@RequestBody JSONArray body){
        return service.delete[(${source.className})]List(body);
    }
}