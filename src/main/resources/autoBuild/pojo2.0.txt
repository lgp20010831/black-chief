package [(${table.scannerPath})];

import com.black.core.autoTree.builder.ApiRemark;
import com.black.core.json.Ignore;
import com.black.core.json.Trust;
import com.black.core.json.Value;
[# th:if="${table.pojoEnhance}"]import com.black.core.autoTree.tools.TypeTransform;[/]
[# th:if="${table.master}"][# th:each="table,tableStat : ${table.subTables}"]import [(${table.scannerPath})].[(${table.javaPojoClassName})];
[/][/]
import lombok.*;
[# th:each="field,fieldStat : ${table.fieldObjects}"][# th:unless="${field.javaFieldClassPath}==null"]
import [(${field.javaFieldClassPath})];[/][/]
import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Trust
@TypeTransform.Time
@SuppressWarnings("all")
public class [(${table.javaPojoClassName})][# th:if="${table.pojoEnhance}"] extends TypeTransform<[(${table.javaPojoClassName})]>[/] {

[# th:each="field,fieldStat : ${table.fieldObjects}"]

    /**  **/[# th:each="item,itemStat : ${table.ignoreField}"][# th:if="${field.javaFieldName}==${item}"]@Ignore[/][/]
    @ApiRemark("  ") [# th:if="${field.javaFieldName}=='id'"]@UUID [/]
    [# th:if="${field.javaType}=='Boolean'"]@Value("false") [/]private [(${field.javaType})] [(${field.javaFieldName})];
 [/] [# th:if="${table.master}"]
 [# th:if="${table.oneWithOneSubTables} != null"][# th:each="one,oneStat : ${table.oneWithOneSubTables}"]
 @ApiRemark("  ")
    private [(${one.javaPojoClassName})] [(${one.headLowercaseJavaClassName})];
 [/][/][# th:if="${table.oneWithMoreSubTables} != null"][# th:each="more,moreStat : ${table.oneWithMoreSubTables}"]
    @ApiRemark("  ")
    private List<[(${more.javaPojoClassName})]> [(${more.headLowercaseJavaClassName})]s;
  [/][/][/]
}