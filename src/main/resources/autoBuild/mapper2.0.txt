<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="[(${mapperRule.daoData.scannerPath})].[(${mapperRule.daoData.pojoData.javaPojoClassName})]Mapper">

      <!--   实体类对应 map -->
      <resultMap id="[(${rule.allAttributeResultMapKey})]" type="[(${mapperRule.daoData.pojoData.javaPojoClassName})]">[# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"]
            <result column="[(${field.dataFieldName})]" property="[(${field.javaFieldName})]" javaType="[(${field.javaTypeWithFullPath})]" jdbcType="[# th:each="item,itemStat : ${rule.javaTypeWithMybatisType}"][# th:if="${itemStat.current.key}==${field.javaType}"][(${itemStat.current.value})][/][/]"/>
      [/] </resultMap>

    [# th:if="${mapperRule.daoData.pojoData.master}"]
      <!--   关联表对应 实体类map -->
      <resultMap id="[(${rule.allAttributeResultMapKey})]Relevancy" type="[(${mapperRule.daoData.pojoData.javaPojoClassName})]" extends="pojoMapId">
        [# th:if="${mapperRule.daoData.pojoData.oneWithOneSubTables} != null"][# th:each="one,oneStat : ${mapperRule.daoData.pojoData.oneWithOneSubTables}"]
            <association property = "[(${one.headLowercaseJavaClassName})]" column = "[(${mapperRule.daoData.pojoData.primaryKey})]" javaType="[(${one.javaPojoClassName})]" select = "select[(${one.javaPojoClassName})]"/>
      [/][/][# th:if="${mapperRule.daoData.pojoData.oneWithMoreSubTables} != null"][# th:each="more,moreStat : ${mapperRule.daoData.pojoData.oneWithMoreSubTables}"]
            <collection property="[(${more.headLowercaseJavaClassName})]s" column ="[(${mapperRule.daoData.pojoData.primaryKey})]" javaType="ArrayList" ofType="[(${more.javaPojoClassName})]" select ="select[(${more.javaPojoClassName})]"/>
         [/][/]</resultMap>
    [/]
    <!--                            ***********************  sql **************************                             -->
    <!--   条件加了 where  -->
    <sql id="check">
           where <if test = "data != null">
           <trim prefixOverrides="and">
                <include refid="condition"/>
           </trim></if>
    </sql>

    <!--   仅仅有条件 -->
    <sql id="condition">[# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"]
            <if test="data.[(${field.javaFieldName})] != null"> and [(${field.dataFieldName})]=#{data.[(${field.javaFieldName})]}</if>
            [/]
    </sql>

    <!--   添加元素的  片段 -->
    <sql id="values">
            ([# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"]
            #{data.[(${field.javaFieldName})]}[# th:unless="${fieldStat.last}"], [/][/])
    </sql>

    <!--   更新元素的 sql 片段 -->
    <sql id ="updateValue">
            <trim suffixOverrides=",">[# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"]
            <if test="data.[(${field.javaFieldName})] != null">[(${field.dataFieldName})] = #{data.[(${field.javaFieldName})]}, </if>[/]
            </trim>
    </sql>

     <!--                            ***********************  CURD  **************************                             -->
    [# th:if="${mapperRule.daoData.pojoData.master}"][# th:each="sub,subStat : ${mapperRule.daoData.pojoData.subTables}"]
    <!--   查询从表: [(${sub.tableName})] -->
    <select id = "select[(${sub.javaPojoClassName})]" resultType="[(${sub.javaPojoClassName})]">
        select * from [(${sub.tableName})] where [(${sub.relationKey})] = #{[(${mapperRule.daoData.pojoData.primaryKey})]} and is_deleted = false
    </select>
    [/][/]

    [# th:if="${mapperRule.daoData.pojoData.master}"]
    <select id ="selectByRelevancy" resultType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"  resultMap="[(${rule.allAttributeResultMapKey})]Relevancy">
        select * from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false <if test= "data != null">[# th:if="${rule.haveCondition}"][# th:unless="${rule.queryCondition}==null"][# th:each="item,itemStat : ${rule.queryCondition}"]
                <if test="data.[(${itemStat.current.key})] != null">[(${itemStat.current.value})] = #{data.[(${itemStat.current.key})]}</if>[/][/]
                [/]<include refid="condition"/> </if>

    </select>
    <!--   查询结果为 map, 且含有数据总量 -->
    <select id="selectByRelevancyWithCount" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"
                resultType="java.util.HashMap" resultMap="hashMapResult">
            select (select count(*) from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false <if test="data != null">
            <include refid="condition"/>
        </if>) count, [(${mapperRule.daoData.pojoData.tableName})].* from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false
            <if test= "data != null">
                <include refid="condition"/> </if>
    </select>
    [/]

    <!--   模糊查询 -->
    <select id="vagueQueryElements" resultType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"  resultMap="pojoMapId">
        select*from [(${mapperRule.daoData.pojoData.tableName})]
        where is_deleted = false <if test = "data != null">
        [# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"]
            <if test="data.[(${field.javaFieldName})] != null"> and [(${field.dataFieldName})] like '%' || #{data.[(${field.javaFieldName})]} || '%'</if>[/]
         </if>
    </select>

    <!--   提供一个复杂查询的模板 -->
    <select id = "complexSelect" resultType ="HashMap">
        select t.* from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false
    </select>

    <select id = "queryById" resultType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"  resultMap="[(${rule.queryUseResultMapId})]">
        select * from [(${mapperRule.daoData.pojoData.tableName})] where id = #{id} and is_deleted = false
    </select>

    <!-- 查询总数据量 -->
    <select id = "queryCount" resultType = "Integer">
        select count(*) from [(${mapperRule.daoData.pojoData.tableName})]
        <if test="data != null"> where is_deleted = false
        <include refid="condition"/>
        </if>
    </select>


    <!--  条件查询 -->
    <select id="queryElements" resultType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]" parameterType="[(${mapperRule.daoData.pojoData.scannerPath})].[(${mapperRule.daoData.pojoData.javaPojoClassName})]"  resultMap="[(${rule.queryUseResultMapId})]">
        select*from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false <if test= "data != null">[# th:if="${rule.haveCondition}"][# th:unless="${rule.queryCondition}==null"][# th:each="item,itemStat : ${rule.queryCondition}"]
        <if test="data.[(${itemStat.current.key})] != null">[(${itemStat.current.value})] = #{data.[(${itemStat.current.key})]}</if>[/][/]
        [/]<include refid="condition"/> </if>
    </select>

    <select id="queryAbsolutely" resultType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"
                                 parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]"
                                 resultMap="[(${rule.queryUseResultMapId})]">
        select*from [(${mapperRule.daoData.pojoData.tableName})] where is_deleted = false <if test= "data != null">
        <include refid="condition"/></if>
    </select>



    <!--   添加数据 -->
    <insert id="insertElements" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]">
        insert into [(${mapperRule.daoData.pojoData.tableName})]([# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"][(${field.dataFieldName})][# th:unless="${fieldStat.last}"], [/][/])
        values <include refid="values"/>
                           [# th:if="${rule.insertHasCondition}"]<if test="data != null"><where>
                                                                      <trim prefixOverrides="and">
                                                                     [# th:unless="${rule.insertCondition}==null"][# th:each="item,itemStat : ${rule.insertCondition}"]<if test="data.[(${itemStat.current.key})] != null">
                                                                          [(${itemStat.current.value})] = #{data.[(${itemStat.current.key})]}
                                                                      </if>[/][/][# th:unless="${rule.insertSpecificValue}==null"][# th:each="item,itemStat : ${rule.insertSpecificValue}"]and [(${itemStat.current.key})]=[(${itemStat.current.value})][/][/]</trim></where></if>[/]
    </insert>

    <!--  添加数据列表 -->
    <insert id="insertElementsList" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]">
    insert into [(${mapperRule.daoData.pojoData.tableName})]([# th:each="field,fieldStat : ${mapperRule.daoData.pojoData.fieldObjects}"][(${field.dataFieldName})][# th:unless="${fieldStat.last}"], [/][/]) values
    <foreach collection="list" item="item" index="index" separator=",">
        <include refid="values"/>
    </foreach>
    </insert>


    <!--   更新数据 -->
    <update id="updateElement" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]">
        update [(${mapperRule.daoData.pojoData.tableName})] set <include refid="updateValue"/>[# th:if="${rule.updateHasCondition}"]
        <where><trim prefixOverrides="and">[# th:unless="${rule.updateCondition}==null"][# th:each="item,itemStat : ${rule.updateCondition}"]
        <if test="data.[(${itemStat.current.key})] != null"> [(${itemStat.current.value})] = #{data.[(${itemStat.current.key})]}</if> [/][/][# th:unless="${rule.updateSpecificValue}==null"][# th:each="item,itemStat : ${rule.updateSpecificValue}"]
        and [(${itemStat.current.key})] = [(${itemStat.current.value})][/][/]
        </trim></where>[/]
    </update>

    <!--  假删除数据  -->
    <delete id="deleteElement" parameterType="[(${mapperRule.daoData.pojoData.javaPojoClassName})]">
        update [(${mapperRule.daoData.pojoData.tableName})] set is_deleted=true, deleted_at = now() where is_deleted = false
                      [# th:if="${rule.deleteHasCondition}"]  <if test = "data != null"><include refid="condition"/></if>[/]
    </delete>

    <!--  真实删除数据 -->
    <delete id="reallyDelete">
            delete from [(${mapperRule.daoData.pojoData.tableName})] where id = #{id}
    </delete>
</mapper>